@model FoosBall.Models.MatchModel
@{
    ViewBag.Title = "Register a FoosBall Fight!";
}
@using (Html.BeginForm("Create", "Match", FormMethod.Post, new { id = "create-match" }))
{
    <fieldset id="create-match-form">
        <legend>Create a FoosBall Match</legend>
        <div id="team-red-players" class="team">
            <div class="team-name">Red Team</div>
            <div class="form-input">
                <select id="red-player-1" name="red-player-1">
                    <option></option>
                    @foreach (var player in Model.SelectPlayers)
                    {
                        <option value="@player.Value">@player.Text</option>
                    }
                </select>
            </div>
            <div class="form-input">
                <select id="red-player-2" name="red-player-2">
                    <option></option>
                    @foreach (var player in Model.SelectPlayers)
                    {
                        <option value="@player.Value">@player.Text</option>
                    }
                </select>
            </div>
        </div>
        
        <div class="vs">VS</div>
        
        <div id="team-blue-players" class="team">
            <div class="team-name">Blue Team</div>
            <div class="form-input">
                <select id="blue-player-1" name="blue-player-1">
                    <option></option>
                    @foreach (var player in Model.SelectPlayers)
                    {
                        <option value="@player.Value">@player.Text</option>
                    }
                </select>
            </div>
            <div class="form-input">
                <select id="blue-player-2" name="blue-player-2">
                    <option></option>
                    @foreach (var player in Model.SelectPlayers)
                    {
                        <option value="@player.Value">@player.Text</option>
                    }
                </select>
            </div>
        </div>

        <div id="validation-message"></div>
            <div class="form-button">
                <input type="submit" value="Create match" class="submit-button button" id="create-match-button"/>
            </div>   
    </fieldset>
    
}

<fieldset id="list-of-matches">
    <legend>Upcoming FoosBall Fights</legend>
    @*<a class="toggle-create-match" href="#">Create a FoosBall match</a>*@
    @if (Model.PendingMatches.Any())
    {
        foreach (var match in Model.PendingMatches)
        {
            <div id="@match.Id" class="match clearfix">
                
                <div id="team-red-players" class="team">
                    @match.RedPlayer1.Name
                    @if (match.RedPlayer2.Name.IsEmpty() == false) {
                        <br/><text>&</text><br/>@match.RedPlayer2.Name
                    }
                </div>
            
                <div id="vs">
                    @if (Request.IsAuthenticated)
                    {
                        <span id="resolve-match" class="editor-icon"><a title="Resolve the match" href="Match/SaveMatchResult/@match.Id"><img src="Content/images/checkmark_32x32.png" alt="A delete button"/></a></span>
                    }
                    <br/>VS<br/>
                    @if (Request.IsAuthenticated)
                    {
                        <span id="delete-match" class="editor-icon"><a title="Delete the match" href="Match/Delete/@match.Id"><img src="Content/images/delete_32x32.png" alt="A delete button"/></a></span>
                    }
                </div>
        
                <div id="team-blue-players" class="team">
                    @match.BluePlayer1.Name 
                    @if (match.BluePlayer2.Name.IsEmpty() == false) {
                        <br/><text>&</text><br/>@match.BluePlayer2.Name
                    }
                </div>

                
            </div>
        }
    }
    else
    {
        <text>- none - </text>
    }
</fieldset>

<fieldset>
    <legend>Legendary FoosBall Fights</legend>
    @if (Model.PlayedMatches.Any())
    {
        foreach (var match in Model.PlayedMatches)
        {
            <div id="@match.Id" class="match clearfix">
                <span class="red-team">@match.RedPlayer1.Name & @match.RedPlayer2.Name</span>
                <span class="vs">vs.</span>
                <span class="blue-team">@match.BluePlayer1.Name & @match.BluePlayer2.Name</span>

                @if (Request.IsAuthenticated && User.Identity.Name == "admin")
                {
                    <span class="editor-icon"><a href="Players/Delete/@match.Id"><img src="Content/images/delete_32x32.png" alt="A delete button"/></a></span>
                }
            </div>
        }
    }
    else
    {
        <text>- none - </text>
    }
</fieldset>        

@*

@using (Html.BeginForm("Create", "Match", FormMethod.Post, new { id = "create-match"}))
{
    <fieldset id="create-match-wrapper">
        <legend>Choose Fighting Teams</legend>      
        <div id="validation-message"></div>
        <div class="form-input" id="red-player-1">
            @Html.LabelFor(m => Model.SelectTeams, "Red Team")
            @Html.DropDownListFor(m => Model.PendingMatches.First().TeamRed, Model.SelectTeams, "", new { @class = "select-team"})
        </div>    
        <div class="form-input" id="red-player-2">
            @Html.LabelFor(m => Model.SelectTeams, "Red Team")
            @Html.DropDownListFor(m => Model.PendingMatches.First().TeamRed, Model.SelectTeams, "", new { @class = "select-team"})
        </div>    
        <div class="form-input" id="blue-player-1">
            @Html.LabelFor(m => Model.SelectTeams, "Red Team")
            @Html.DropDownListFor(m => Model.PendingMatches.First().TeamRed, Model.SelectTeams, "", new { @class = "select-team"})
        </div>    
        <div class="form-input" id="blue-player-2">
            @Html.LabelFor(m => Model.SelectTeams, "Red Team")
            @Html.DropDownListFor(m => Model.PendingMatches.First().TeamRed, Model.SelectTeams, "", new { @class = "select-team"})
        </div>    
        <div class="form-button">
            <input type="submit" value="Begin battle" class="submit-button" id="create-match-button"/>
        </div>    
    </fieldset>
}
<fieldset>
    <legend>Upcoming Kung FoosBall Fights</legend>
    @if (Model.PendingMatches.Any())
    {
        <table id="list-of-pending-matches">
            <thead>
                <tr>
                    <td>Red Team</td>
                    <td>Red Team members</td>
                    <td>Blue Team</td>
                    <td>Blue Team members</td>
                    <td>Match created</td>
                    @if(Request.IsAuthenticated)
                    {
                        <td></td>
                    }
                    <td></td>
                </tr>        
            </thead>
            <tbody>
                @foreach (var match in Model.PendingMatches)
                {
                    <tr>
                        <td class="team-red">@match.TeamRed.Name</td> 
                        <td class="team-red-players">
                            @foreach (var player in match.TeamRed.Members)
                            {
                                <span class="team-member round-border-small">@player.Name</span> 
                            }
                        </td>
                        <td class="team-blue">@match.TeamBlue.Name</td>
                        <td class="team-blue-players">
                            @foreach (var player in match.TeamBlue.Members)
                            {
                                <span class="team-member round-border-small">@player.Name</span> 
                            }
                        </td>
                        <td class="registered">@match.CreationTime.ToLocalTime().ToString("dd MMM yyyy HH:mm:ss")</td>
                        @if(Request.IsAuthenticated)
                        {
                            <td><a class="delete-match-button" href="#" title="Delete match, no fun!">Delete match</a></td>
                        }
                        <td class="conclude-match">@Html.ActionLink("Match result", "SaveMatchResult", new {id = match.Id})</td>
                    </tr>
                }   
            </tbody>
        </table>
    } else
    {
        <text>- none - </text>
    }
</fieldset>

<fieldset>
    <legend>A list of Legendary Kung FoosBall Fights</legend>
    @if (Model.PlayedMatches.Any())
    {
        <table id="list-of-played-matches">
            <thead>
                <tr>
                    <td>Red Team</td>
                    <td>Red Team members</td>
                    <td>Blue Team</td>
                    <td>Blue Team members</td>
                    <td>Red Score</td>
                    <td>Blue Score</td>
                    <td>Played at</td>
                    @if(Request.IsAuthenticated)
                    {
                        <td></td>
                    }
                </tr>        
            </thead>
            <tbody>
                @foreach (var match in Model.PlayedMatches)
                {
                    <tr>
                        <td class="team-red" title="@foreach (var player in match.TeamRed.Members) { @player.Name }">@match.TeamRed.Name</td>
                        <td class="team-red-players">
                            @foreach (var player in match.TeamRed.Members)
                            {
                                <span class="team-member round-border-small">@player.Name</span> 
                            }
                        </td>
                        <td class="team-blue">@match.TeamBlue.Name</td>
                        <td class="team-blue-players">
                            @foreach (var player in match.TeamBlue.Members)
                            {
                                <span class="team-member round-border-small">@player.Name</span> 
                            }
                        </td>
                        <td class="number team-red-score">@match.TeamRedScore</td>
                        <td class="number team-blue-score">@match.TeamBlueScore</td>
                        <td class="time">@match.GameOverTime.ToLocalTime().ToString("dd MMM yyyy HH:mm:ss")</td>
                        @if(Request.IsAuthenticated)
                        {
                            <td>@Html.ActionLink("Delete match","Delete", new { id = match.Id })</td>   
                        }
                    </tr>
                }   
            </tbody>
        </table>
    } else
    {
        <text>- none - </text>
    }    
</fieldset>
        *@
