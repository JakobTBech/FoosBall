    @model FoosBall.Models.Views.ConfigViewModel
@{
    ViewBag.Title = "Configuration";
}

@section Javascript{ <script async src="/Scripts/Admin.js"></script> }
@section Css { <link rel="stylesheet" href="/Content/Admin.css"/> }

<fieldset id="app-configuration">
    <legend>Configuration</legend>
    @using (Html.BeginForm("Save", "Admin", FormMethod.Post))
    {
        <label for="Name">Application name:</label>
        <input type="text" name="Name" value="@Model.Settings.Name"/>

        <label for="Name">Application Version:</label>
        <input type="text" name="Version" value="@Model.Settings.Version"/>

        <label for="Name">Domain:</label>
        <input type="text" name="Domain" value="@Model.Settings.Domain"/>

        <label for="Name">Admin Account/Email:</label> 
        <input type="text" name="AdminAccount" value="@Model.Settings.AdminAccount"/>
    
        @Html.LabelFor(m => Model.Settings.RequireDepartment, "Require Department?")
        <input name="RequireDepartment" type="checkbox" value="true" @(Model.Settings.RequireDepartment ? "checked=\"checked\"" : "")/>
        
        @Html.LabelFor(m => Model.Settings.RequireDomainValidation, "Validate domain?")
        <input name="RequireDomainValidation" type="checkbox" value="true" @(Model.Settings.RequireDomainValidation ? "checked=\"checked\"" : "")/>

        @Html.LabelFor(m => Model.Settings.AllowOneOnOneMatches, "Allow one-on-one matches?")
        <input name="AllowOneOnOneMatches" type="checkbox" value="true" @(Model.Settings.AllowOneOnOneMatches ? "checked=\"checked\"" : "")/>

        @Html.LabelFor(m => Model.Settings.GenderSpecificMatches, "Require gender specific matches?")
        <input name="GenderSpecificMatches" type="checkbox" value="true" @(Model.Settings.GenderSpecificMatches ? "checked=\"checked\"" : "")/>

        <input name="save-config" type="submit" value="Save" class="button"/>
    }
</fieldset>

<fieldset id="data-migration">
    <legend>Copy Mongo data</legend>
    <button class="button" href="#" id="copy-prod-to-staging">Copy Production Data to Staging</button>
    <br/>
    @if (ViewBag.Environment == "Local")
    {
        <button class="button" id="copy-prod-to-local">Copy Production Data to Local</button>
    }
</fieldset>

<fieldset id="synchronize-player-data">
    <legend>Synchronize data</legend>

    <button id="start-player-sync" class="button">Synchronize players based on matches</button>
</fieldset>

<fieldset id="player-editor">
    <legend>Edit Players (experimental)</legend>
    
    @Html.LabelFor(m => Model.Users, "Choose a player")
    <select id="select-player" name="select-player">
        <option></option>
        @foreach (var user in Model.Users)
        {
            <option id="@user.Value" value="@user.Value">@user.Text</option>
        }
    </select>
    
    <div id="player-data"></div>
</fieldset>